project.ext["signing.keyId"] = ''
project.ext["signing.password"] = ''
project.ext["signing.key"] = ''
project.ext["ossrhUsername"] = ''
project.ext["ossrhPassword"] = ''
project.ext["sonatypeStagingProfileId"] = ''
project.ext["nexusUrl"] = ''
project.ext["snapshotRepositoryUrl"] = ''

File secretPropsFile = file("local.properties")
if (secretPropsFile.exists()) {
    secretPropsFile.withReader {
        Properties p = new Properties()
        p.load(it)
        p.forEach { String key, value -> project.ext[key] = value }
    }
} else {
    // Use system environment variables
    project.ext["ossrhUsername"] = System.getenv('OSSRH_USERNAME')
    project.ext["ossrhPassword"] = System.getenv('OSSRH_PASSWORD')
    project.ext["sonatypeStagingProfileId"] = System.getenv('SONATYPE_STAGING_PROFILE_ID')
    project.ext["signing.keyId"] = System.getenv('SIGNING_KEY_ID')
    project.ext["signing.password"] = System.getenv('SIGNING_PASSWORD')
    project.ext["signing.key"] = System.getenv('SIGNING_KEY')
    project.ext["nexusUrl"] = System.getenv('NEXUS_URL')
    project.ext["snapshotRepositoryUrl"] = System.getenv('SNAPSHOT_REPOSITORY_URL')
}

nexusPublishing {
    repositories {
        sonatype {
            nexusUrl.set(uri(project.nexusUrl))
            snapshotRepositoryUrl.set(uri(project.snapshotRepositoryUrl))
            stagingProfileId = project.sonatypeStagingProfileId
            username = project.ossrhUsername
            password = project.ossrhPassword
        }
    }
}

publishing {
    publications {
        release(MavenPublication) {
            pom {
                name = 'micronaut-querydsl-dynamic-query'
                description = 'A Dynamic REST Query Language in Micronaut'
                url = 'https://snourian.com/dynamic-rest-query-language-micronaut-jpa-querydsl'
                licenses {
                    license {
                        name = 'GNU General Public License v3.0'
                        url = 'https://www.gnu.org/licenses/gpl-3.0.en.html'
                    }
                }
                developers {
                    developer {
                        id = 'nrsina'
                        name = 'Sina Nourian'
                        email = 'sina.nourian@gmail.com'
                    }
                }
                scm {
                    connection = 'scm:git:github.com/nrsina/micronaut-querydsl-dynamic-query.git'
                    developerConnection = 'scm:git:ssh://github.com/nrsina/micronaut-querydsl-dynamic-query.git'
                    url = 'https://github.com/nrsina/micronaut-querydsl-dynamic-query'
                }
            }

            from components.java
        }
    }
}

signing {
    sign publishing.publications
}